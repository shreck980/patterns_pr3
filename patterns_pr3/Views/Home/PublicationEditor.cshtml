@using patterns_pr3.Core.Memento
@using patterns_pr3.Core.Entities
@{
    ViewData["Title"] = "PublicationEditor";
}
@model PublicationMemento


<h2>Edit Publication</h2>

<hr />
<div class="form-group">

    
     @Html.ActionLink("Назад", "Back", "Home")
     @Html.ActionLink("Вперед", "Next", "Home")
     @Html.ActionLink("Видалити", "Delete", "Home")
  
</div>
<hr />
@{
    var messages = TempData["Messages"] as List<string>;
}

@using (Html.BeginForm("Edit", "Home", FormMethod.Post))
{
    <div class="form-group">
        <label for="Title">Title:</label>
        @Html.TextBox("Title", Model.Title, new { @class = "form-control", @id = "Title" })
    </div>

    <div class="form-group">
        <label for="PageCount">Page Count:</label>
        @Html.TextBox("PageCount", Model.PageCount, new { @class = "form-control", @type = "number", @id = "PageCount" })
    </div>

    <div class="form-group">
        <label for="Circulation">Circulation:</label>
        @Html.TextBox("Circulation", Model.Circulation, new { @class = "form-control", @type = "number", @id = "Circulation" })
    </div>

    <div class="form-group">
        <label for="Price">Price:</label>
        @Html.TextBox("Price", Model.Price, new { @class = "form-control", @id = "Price" })
    </div>

    <div class="form-group">
        <label for="Genre">Genre:</label>
        @Html.DropDownList(
                "Genre",
                Enum.GetValues(typeof(Genre)).Cast<Genre>().Select(genre => new SelectListItem
    {
        Text = genre.ToString(),
        Value = genre.ToString(),
        Selected = Model.Genre == genre
    }),
                new { @class = "form-control", @id = "Genre" }
                )
    </div>

    

    <button type="submit" class="btn btn-primary">Save Changes</button>

    

    if (messages != null && messages.Any())
    {
        <div class="alert alert-info">
            <ul>
                  @foreach (var message in messages)
                  {
                    <li>@message</li>
                  }
            </ul>
        </div>
    
    
        // Keep the messages in TempData for the next request
        TempData.Keep("Messages");
    }

}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
